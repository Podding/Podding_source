- if mode == "archive"
  .episodeArchive
    span.episodeArchive-date #{ l episode.date }
    span.episodeArchive-heading
      a.episodeArchive-episodeNumber href="#{ url_for(episode) }"
        | <span class="hide-at-break2">#{ episode.show.title }</span><span class="show-at-break2 episodeNumber-showName">#{ episode.show.name.upcase }</span><span class="episodeNumber-number">#{ episode.number }</span>
      a.episodeArchive-title href="#{ url_for(episode) }"
        | #{ episode.title }

    span.episodeArchive-hosts
      span.episodeArchive-spacer #{ t 'with' }
      - if episode.hosts.length == 1
        - for host in episode.hosts
          a.single.host-link href="/hosts/#{ host.name }" #{ host.name }

      - elsif episode.hosts.length != 1
        - for host in episode.hosts
          a.host-link href="/hosts/#{ host.name }" #{ host.name }

- else
  div class=["episode", "#{ episode.show }", "episode--#{ episode.status }"]

    == slim :"includes/_episode-header", :locals => { :episode => episode }

    .episode-content
      .episode-teaser.text-content
        - unless episode.teaser.empty?
          == render_content(episode.teaser)
        - if episode.teaser.empty?
          - if episode.status != "published" and episode.live_date
            == markdown "Diese Episode wird am #{ episode.live_date.strftime("%-d. %B %Y") } live gestreamt. Den Stream findest du [hier]( #{ settings.streaming_url } ) und weitere Informationen auf der [Live-Seite]( /pages/live )."
          - elsif episode.status == "planned"
            p Diese Folge ist im Moment nur geplant und hat deshalb noch keine Beschreibung. :/
          - else
            p In dieser Folge reden Menschen Ã¼ber Dinge.

      - if episode.status == "published"
        a.moreLink href="#{ url_for(episode) }" title="#{ t 'shownotes' } #{ t 'for' } #{ episode.show.title } - #{ episode.title }"
           | Shownotes
        p.shortEpisode-downloadLinks
          - episode.audio_files.each do |audioformat, url|
            a.shortEpisode-downloadLink.popover href="#{ url }"
              | #{ audioformat.name }
              span.popover-content Download #{ episode.show.title }: #{ episode.title } in #{ audioformat.name }